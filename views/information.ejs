<div class="flex flex-col justify-between bg-slate-200 h-[15vh] bg-opacity-50 select-none">
    <div class="w-full text-5xl font-semibold italic text-center pt-5">
        Information
    </div>
    <div class="flex justify-center pb-5">
        <div id="interactiveButton" class="z-40 transform duration-1000 absolute w-96 h-10 border border-black rounded-full bg-white"></div>
        <div id="table1" class="z-50 w-96 h-10 text-center text-xl pt-1 cursor-pointer hover:font-bold">Authors data table</div>
        <div id="table2" class="z-50 w-96 h-10 text-center text-xl pt-1 cursor-pointer hover:font-bold">Top 10 rated books</div>
        <div id="table3" class="z-50 w-96 h-10 text-center text-xl pt-1 cursor-pointer hover:font-bold">Top 50 selling books</div>
    </div>
</div>
<div id="movileTables" class="h-[75vh] w-full fixed transform duration-1000 select-none">
    <div class="absolute h-[75vh] w-full -translate-x-full">
        <div class="bg-slate-200 bg-opacity-50 w-full h-[70vh] mx-auto overflow-y-auto">
            <table id="myTable" class="w-4/5 mx-auto">
                <thead>
                    <tr class=" sticky top-0 w-5/6 h-10 bg-gray-200 text-gray-600 uppercase text-sm leading-normal">
                        <th class="w-3/12 py-3 px-6 text-left">
                            <div class="flex justify-between w-full">
                                <div id="authorsButton" class="flex border rounded-full px-4 py-1 border-black w-fit cursor-pointer hover:bg-gray-50" state=2>
                                    <div class="mr-3">
                                        Authors
                                    </div>
                                    <div class="w-5 h-5">
                                        <svg id="authorsNeutral" class="hidden" viewBox="0 0 20 20" fill="none">
                                            <path fill="#000000" fill-rule="evenodd" d="M18 10a1 1 0 01-1 1H3a1 1 0 110-2h14a1 1 0 011 1z"/>
                                        </svg>
    
                                        <svg id="authorsUp" viewBox="0 0 24 24" fill="none">
                                            <path fill-rule="evenodd" clip-rule="evenodd" d="M12 3C12.2652 3 12.5196 3.10536 12.7071 3.29289L19.7071 10.2929C20.0976 10.6834 20.0976 11.3166 19.7071 11.7071C19.3166 12.0976 18.6834 12.0976 18.2929 11.7071L13 6.41421V20C13 20.5523 12.5523 21 12 21C11.4477 21 11 20.5523 11 20V6.41421L5.70711 11.7071C5.31658 12.0976 4.68342 12.0976 4.29289 11.7071C3.90237 11.3166 3.90237 10.6834 4.29289 10.2929L11.2929 3.29289C11.4804 3.10536 11.7348 3 12 3Z" fill="#000000"/>
                                        </svg>
                                        
                                        <svg id="authorsDown" class="hidden" viewBox="0 0 24 24" fill="none">
                                            <path fill-rule="evenodd" clip-rule="evenodd" d="M12 3C12.5523 3 13 3.44772 13 4V17.5858L18.2929 12.2929C18.6834 11.9024 19.3166 11.9024 19.7071 12.2929C20.0976 12.6834 20.0976 13.3166 19.7071 13.7071L12.7071 20.7071C12.3166 21.0976 11.6834 21.0976 11.2929 20.7071L4.29289 13.7071C3.90237 13.3166 3.90237 12.6834 4.29289 12.2929C4.68342 11.9024 5.31658 11.9024 5.70711 12.2929L11 17.5858V4C11 3.44772 11.4477 3 12 3Z" fill="#000000"/>
                                        </svg>
                                    </div>
                                </div>
                                <div>
                                    <input type="text" id="authorFilter" placeholder="filter" class="mt-1 rounded-full px-2">
                                </div>
                            </div>
                        </th>
                        <th class="w-3/12 py-3 px-6 text-left">
                            <div class="flex justify-between w-full">
                                <div id="publishedButton" class="flex border rounded-full px-4 py-1 border-black w-fit cursor-pointer hover:bg-gray-50" state=1>
                                    <div class="mr-3">
                                        Number of published books
                                    </div>
                                    <div class="w-5 h-5">
                                        <svg id="publishedNeutral" viewBox="0 0 20 20" fill="none">
                                            <path fill="#000000" fill-rule="evenodd" d="M18 10a1 1 0 01-1 1H3a1 1 0 110-2h14a1 1 0 011 1z"/>
                                        </svg>
    
                                        <svg id="publishedUp" class="hidden" viewBox="0 0 24 24" fill="none">
                                            <path fill-rule="evenodd" clip-rule="evenodd" d="M12 3C12.2652 3 12.5196 3.10536 12.7071 3.29289L19.7071 10.2929C20.0976 10.6834 20.0976 11.3166 19.7071 11.7071C19.3166 12.0976 18.6834 12.0976 18.2929 11.7071L13 6.41421V20C13 20.5523 12.5523 21 12 21C11.4477 21 11 20.5523 11 20V6.41421L5.70711 11.7071C5.31658 12.0976 4.68342 12.0976 4.29289 11.7071C3.90237 11.3166 3.90237 10.6834 4.29289 10.2929L11.2929 3.29289C11.4804 3.10536 11.7348 3 12 3Z" fill="#000000"/>
                                        </svg>
                                        
                                        <svg id="publishedDown" class="hidden" viewBox="0 0 24 24" fill="none">
                                            <path fill-rule="evenodd" clip-rule="evenodd" d="M12 3C12.5523 3 13 3.44772 13 4V17.5858L18.2929 12.2929C18.6834 11.9024 19.3166 11.9024 19.7071 12.2929C20.0976 12.6834 20.0976 13.3166 19.7071 13.7071L12.7071 20.7071C12.3166 21.0976 11.6834 21.0976 11.2929 20.7071L4.29289 13.7071C3.90237 13.3166 3.90237 12.6834 4.29289 12.2929C4.68342 11.9024 5.31658 11.9024 5.70711 12.2929L11 17.5858V4C11 3.44772 11.4477 3 12 3Z" fill="#000000"/>
                                        </svg>
                                    </div>
                                </div>
                                <div>
                                    <input type="text" id="publishedFilter" placeholder="filter" class="mt-1 rounded-full px-2 w-16">
                                </div>
                            </div>
                        </th>
                        <th class="w-3/12 py-3 px-6 text-left">
                            <div class="flex justify-between w-full">
                                <div id="scoresButton" class="flex border rounded-full px-4 py-1 border-black w-fit cursor-pointer hover:bg-gray-50" state=1>
                                    <div class="mr-3">
                                        Average scores
                                    </div>
                                    <div class="w-5 h-5">
                                        <svg id="scoresNeutral" viewBox="0 0 20 20" fill="none">
                                            <path fill="#000000" fill-rule="evenodd" d="M18 10a1 1 0 01-1 1H3a1 1 0 110-2h14a1 1 0 011 1z"/>
                                        </svg>

                                        <svg id="scoresUp" class="hidden" viewBox="0 0 24 24" fill="none">
                                            <path fill-rule="evenodd" clip-rule="evenodd" d="M12 3C12.2652 3 12.5196 3.10536 12.7071 3.29289L19.7071 10.2929C20.0976 10.6834 20.0976 11.3166 19.7071 11.7071C19.3166 12.0976 18.6834 12.0976 18.2929 11.7071L13 6.41421V20C13 20.5523 12.5523 21 12 21C11.4477 21 11 20.5523 11 20V6.41421L5.70711 11.7071C5.31658 12.0976 4.68342 12.0976 4.29289 11.7071C3.90237 11.3166 3.90237 10.6834 4.29289 10.2929L11.2929 3.29289C11.4804 3.10536 11.7348 3 12 3Z" fill="#000000"/>
                                        </svg>
                                        
                                        <svg id="scoresDown" class="hidden" viewBox="0 0 24 24" fill="none">
                                            <path fill-rule="evenodd" clip-rule="evenodd" d="M12 3C12.5523 3 13 3.44772 13 4V17.5858L18.2929 12.2929C18.6834 11.9024 19.3166 11.9024 19.7071 12.2929C20.0976 12.6834 20.0976 13.3166 19.7071 13.7071L12.7071 20.7071C12.3166 21.0976 11.6834 21.0976 11.2929 20.7071L4.29289 13.7071C3.90237 13.3166 3.90237 12.6834 4.29289 12.2929C4.68342 11.9024 5.31658 11.9024 5.70711 12.2929L11 17.5858V4C11 3.44772 11.4477 3 12 3Z" fill="#000000"/>
                                        </svg>
                                    </div>
                                </div>
                                <div>
                                    <input type="text" id="scoresFilter" placeholder="filter" class="mt-1 rounded-full px-2 w-16">
                                </div>
                            </div>
                        </th>
                        <th class="w-3/12 py-3 px-6 text-left">
                            <div class="flex justify-between w-full">
                                <div id="salesButton" class="flex border rounded-full px-4 py-1 border-black w-fit cursor-pointer hover:bg-gray-50" state=1>
                                    <div class="mr-3">
                                        Total sales
                                    </div>
                                    <div class="w-5 h-5">
                                        <svg id="salesNeutral" viewBox="0 0 20 20" fill="none">
                                            <path fill="#000000" fill-rule="evenodd" d="M18 10a1 1 0 01-1 1H3a1 1 0 110-2h14a1 1 0 011 1z"/>
                                        </svg>

                                        <svg id="salesUp" class="hidden" viewBox="0 0 24 24" fill="none">
                                            <path fill-rule="evenodd" clip-rule="evenodd" d="M12 3C12.2652 3 12.5196 3.10536 12.7071 3.29289L19.7071 10.2929C20.0976 10.6834 20.0976 11.3166 19.7071 11.7071C19.3166 12.0976 18.6834 12.0976 18.2929 11.7071L13 6.41421V20C13 20.5523 12.5523 21 12 21C11.4477 21 11 20.5523 11 20V6.41421L5.70711 11.7071C5.31658 12.0976 4.68342 12.0976 4.29289 11.7071C3.90237 11.3166 3.90237 10.6834 4.29289 10.2929L11.2929 3.29289C11.4804 3.10536 11.7348 3 12 3Z" fill="#000000"/>
                                        </svg>
                                        
                                        <svg id="salesDown" class="hidden" viewBox="0 0 24 24" fill="none">
                                            <path fill-rule="evenodd" clip-rule="evenodd" d="M12 3C12.5523 3 13 3.44772 13 4V17.5858L18.2929 12.2929C18.6834 11.9024 19.3166 11.9024 19.7071 12.2929C20.0976 12.6834 20.0976 13.3166 19.7071 13.7071L12.7071 20.7071C12.3166 21.0976 11.6834 21.0976 11.2929 20.7071L4.29289 13.7071C3.90237 13.3166 3.90237 12.6834 4.29289 12.2929C4.68342 11.9024 5.31658 11.9024 5.70711 12.2929L11 17.5858V4C11 3.44772 11.4477 3 12 3Z" fill="#000000"/>
                                        </svg>
                                    </div>
                                </div>
                                <div>
                                    <input type="text" id="salesFilter" placeholder="filter" class="mt-1 rounded-full px-2">
                                </div>
                            </div>
                        </th>
                    </tr>
                </thead>
                <tbody class="text-gray-600 text-sm font-light">
                    <% authorsData.authorsData.forEach((element, index) => { %>
                        <tr class=" border-b border-gray-100 hover:bg-gray-200 <%= (index % 2 === 0) ? 'bg-white' : 'bg-gray-50' %>">
                            <td class="w-3/12 py-3 px-6 whitespace-nowrap">
                                <span class="font-medium"><%= element.authorName %></span>
                            </td>
                            <td class="w-3/12 py-3 px-6">
                                <span><%= element.publishedBooks %></span>
                            </td>
                            <td class="w-3/12 py-3 px-6">
                                <span><%= element.averageScore %></span>
                            </td>
                            <td class="w-3/12 py-3 px-6">
                                <span><%= element.totalSales %></span>
                            </td>
                        </tr>
                    <% }) %>
                </tbody>
            </table>
            <script>
                document.addEventListener("DOMContentLoaded", function () {
                    const table = document.getElementById("myTable");
                    const authorFilter = document.getElementById("authorFilter");              
                    const publishedFilter = document.getElementById("publishedFilter");              
                    const scoresFilter = document.getElementById("scoresFilter");              
                    const salesFilter = document.getElementById("salesFilter");    

                    authorFilter.addEventListener("input", function () {
                        const filter = authorFilter.value.toLowerCase();
                        const rows = table.getElementsByTagName("tr");
                        for (let i = 1; i < rows.length; i++) {
                            const rowData = rows[i].getElementsByTagName("td");
                            const cellValue = rowData[0].textContent || rowData[0].innerText;
                            const shouldShowRow = cellValue.toLowerCase().indexOf(filter) > -1;
                            rows[i].style.display = shouldShowRow ? "" : "none";
                        }
                    });

                    publishedFilter.addEventListener("input", function () {
                        const filter = publishedFilter.value.toLowerCase();
                        const rows = table.getElementsByTagName("tr");
                        for (let i = 1; i < rows.length; i++) {
                            const rowData = rows[i].getElementsByTagName("td");
                            const cellValue = rowData[1].textContent || rowData[1].innerText;
                            const shouldShowRow = cellValue.toLowerCase().indexOf(filter) > -1;
                            rows[i].style.display = shouldShowRow ? "" : "none";
                        }
                    });

                    scoresFilter.addEventListener("input", function () {
                        const filter = scoresFilter.value.toLowerCase();
                        const rows = table.getElementsByTagName("tr");
                        for (let i = 1; i < rows.length; i++) {
                            const rowData = rows[i].getElementsByTagName("td");
                            const cellValue = rowData[2].textContent || rowData[2].innerText;
                            const shouldShowRow = cellValue.toLowerCase().indexOf(filter) > -1;
                            rows[i].style.display = shouldShowRow ? "" : "none";
                        }
                    });

                    salesFilter.addEventListener("input", function () {
                        const filter = salesFilter.value.toLowerCase();
                        const rows = table.getElementsByTagName("tr");
                        for (let i = 1; i < rows.length; i++) {
                            const rowData = rows[i].getElementsByTagName("td");
                            const cellValue = rowData[3].textContent || rowData[3].innerText;
                            const shouldShowRow = cellValue.toLowerCase().indexOf(filter) > -1;
                            rows[i].style.display = shouldShowRow ? "" : "none";
                        }
                    });
                });
              </script>
        </div>
        <div class="bg-slate-200 bg-opacity-50 w-full h-[5vh]"></div>
    </div>
    <div class="absolute h-[75vh] w-full">
        <div class="bg-slate-200 bg-opacity-50 w-full h-[70vh] mx-auto overflow-y-auto">
            <table class="w-4/5 mx-auto">
                <thead>
                    <tr class=" sticky top-0 w-5/6 h-10 bg-gray-200 text-gray-600 uppercase text-sm leading-normal">
                        <th class="w-3/12 py-3 px-6 text-left">
                            Books
                        </th>
                        <th class="w-1/12 py-3 px-6 text-left">
                            Average Scores
                        </th>
                        <th class="w-4/12 py-3 px-6 text-left">
                            Best reviews
                        </th>
                        <th class="w-4/12 py-3 px-6 text-left">
                            Worst reviews
                        </th>
                    </tr>
                </thead>
                <tbody class="text-gray-600 text-sm font-light">
                    <% ratedBooksData.topTenBook.forEach((element, index) => { %>
                        <tr class=" border-b border-gray-100 hover:bg-gray-200 <%= (index % 2 === 0) ? 'bg-white' : 'bg-gray-50' %>">
                            <td class="w-3/12 py-3 px-6 whitespace-nowrap">
                                <span class="font-medium"><%= element.bookName %></span>
                            </td>
                            <td class="w-3/12 py-3 px-6">
                                <span><%= element.averageScore %></span>
                            </td>
                            <td class="w-3/12 py-3 px-6">
                                <span><%= element.popularPositiveReview %></span>
                            </td>
                            <td class="w-3/12 py-3 px-6">
                                <span><%= element.popularNegativeReview %></span>
                            </td>
                        </tr>
                    <% }) %>
                </tbody>
            </table>
        </div>
        <div class="bg-slate-200 bg-opacity-50 w-full h-[5vh]"></div>
    </div>
    <div class="absolute h-[75vh] w-full translate-x-full">
        <div class="bg-slate-200 bg-opacity-50 w-full h-[70vh] mx-auto overflow-y-auto">
            <table class="w-4/5 mx-auto">
                <thead>
                    <tr class=" sticky top-0 w-5/6 h-10 bg-gray-200 text-gray-600 uppercase text-sm leading-normal">
                        <th class="w-3/12 py-3 px-6 text-left">
                            Books
                        </th>
                        <th class="w-3/12 py-3 px-6 text-left">
                            Total Sales of this Book
                        </th>
                        <th class="w-3/12 py-3 px-6 text-left">
                            Total Sales of the Author
                        </th>
                        <th class="w-3/12 py-3 px-6 text-left">
                            ¿Top 5 best seller in his year?
                        </th>
                    </tr>
                </thead>
                <tbody class="text-gray-600 text-sm font-light">
                    <% sellingBooksData.forEach((element, index) => { %>
                        <tr class=" border-b border-gray-100 hover:bg-gray-200 <%= (index % 2 === 0) ? 'bg-white' : 'bg-gray-50' %>">
                            <td class="w-3/12 py-3 px-6 whitespace-nowrap">
                                <span class="font-medium"><%= element.bookName %></span>
                            </td>
                            <td class="w-3/12 py-3 px-6">
                                <span><%= element.totalSales %></span>
                            </td>
                            <td class="w-3/12 py-3 px-6">
                                <span><%= element.totalAuthorSales %></span>
                            </td>
                            <td class="w-3/12 py-3 px-6">
                                <% if (element.topFiveInHisYear == true) {%>
                                    <span class="text-green-800 font-bold">YES</span>
                                <% } else { %>
                                    <span class="text-red-500 font-semibold">NO</span>
                                <% }%>
                            </td>
                        </tr>
                    <% }) %>
                </tbody>
            </table>
        </div>
        <div class="bg-slate-200 bg-opacity-50 w-full h-[5vh]"></div>
    </div>
</div>
<script>

    let table1 = document.getElementById("table1")
    let table2 = document.getElementById("table2")
    let table3 = document.getElementById("table3")
    let interactiveButton = document.getElementById("interactiveButton")
    let movileTables = document.getElementById("movileTables")

    table1.addEventListener("click", function(){
        interactiveButton.classList.add("-translate-x-[100%]");
        interactiveButton.classList.remove("translate-x-[100%]");
        movileTables.classList.remove("-translate-x-[100%]");
        movileTables.classList.add("translate-x-[100%]");
    })
    table2.addEventListener("click", function(){
        interactiveButton.classList.remove("-translate-x-[100%]");
        interactiveButton.classList.remove("translate-x-[100%]");
        movileTables.classList.remove("-translate-x-[100%]");
        movileTables.classList.remove("translate-x-[100%]");
    })
    table3.addEventListener("click", function(){
        interactiveButton.classList.remove("-translate-x-[100%]");
        interactiveButton.classList.add("translate-x-[100%]");
        movileTables.classList.add("-translate-x-[100%]");
        movileTables.classList.remove("translate-x-[100%]");
    })

    let authorsNeutral = document.getElementById("authorsNeutral")
    let authorsUp = document.getElementById("authorsUp")
    let authorsDown = document.getElementById("authorsDown")
    let publishedNeutral = document.getElementById("publishedNeutral")
    let publishedUp = document.getElementById("publishedUp")
    let publishedDown = document.getElementById("publishedDown")
    let scoresNeutral = document.getElementById("scoresNeutral")
    let scoresUp = document.getElementById("scoresUp")
    let scoresDown = document.getElementById("scoresDown")
    let salesNeutral = document.getElementById("salesNeutral")
    let salesUp = document.getElementById("salesUp")
    let salesDown = document.getElementById("salesDown")
    
    let authorsButton = document.getElementById("authorsButton")
    let publishedButton = document.getElementById("publishedButton")
    let scoresButton = document.getElementById("scoresButton")
    let salesButton = document.getElementById("salesButton")

    function initialState(){
        authorsNeutral.classList.remove("hidden")
        publishedNeutral.classList.remove("hidden")
        scoresNeutral.classList.remove("hidden")
        salesNeutral.classList.remove("hidden")
        authorsUp.classList.add("hidden")
        authorsDown.classList.add("hidden")
        publishedUp.classList.add("hidden")
        publishedDown.classList.add("hidden")
        scoresUp.classList.add("hidden")
        scoresDown.classList.add("hidden")
        salesUp.classList.add("hidden")
        salesDown.classList.add("hidden")

        authorsButton.attributes.state.value = 1
        publishedButton.attributes.state.value = 1
        scoresButton.attributes.state.value = 1
        salesButton.attributes.state.value = 1

    }

    function sortTable(orderString,column){
        const table = document.getElementById('myTable');
        const rows = table.rows;
        let sortedRows = [];
    
        // Convertir las filas a un array para ordenarlas
        for (let i = 1; i < rows.length; i++) {
            sortedRows.push(rows[i]);
        }
    
        if (orderString == "asc"){
            sortedRows.sort(function(a, b) {
                const aCellValue = a.cells[column].innerText;
                const bCellValue = b.cells[column].innerText;
                return aCellValue.localeCompare(bCellValue);
            });
        } else {
            sortedRows.sort(function(a, b) {
                const aCellValue = a.cells[column].innerText;
                const bCellValue = b.cells[column].innerText;
                return bCellValue.localeCompare(aCellValue);
            });
        }
    
        // Eliminar las filas existentes en la tabla
        while (table.rows.length > 1) {
            table.deleteRow(1);
        }
    
        // Agregar las filas ordenadas a la tabla
        for (let i = 0; i < sortedRows.length; i++) {
            table.appendChild(sortedRows[i]);
        }
    }
    sortTable("asc",0)

    authorsButton.addEventListener("click", function(){
        let state = authorsButton.attributes.state.value
        initialState()
        if (state == 1){
            sortTable("asc",0)
            authorsButton.attributes.state.value = 2
            authorsNeutral.classList.toggle("hidden")
            authorsUp.classList.toggle("hidden")
        } else{
            if (state == 2){
                sortTable("desc",0)
                authorsButton.attributes.state.value = 1
                authorsNeutral.classList.toggle("hidden")
                authorsDown.classList.toggle("hidden")
            }
        }
        
    })
    
    publishedButton.addEventListener("click", function(){
        let state = publishedButton.attributes.state.value
        initialState()
        if (state == 1){
            sortTable("asc",1)
            publishedButton.attributes.state.value = 2
            publishedNeutral.classList.toggle("hidden")
            publishedUp.classList.toggle("hidden")
        } else{
            if (state == 2){
                sortTable("desc",1)
                publishedButton.attributes.state.value = 1
                publishedNeutral.classList.toggle("hidden")
                publishedDown.classList.toggle("hidden")
            }
        }
        
    })

    scoresButton.addEventListener("click", function(){
        let state = scoresButton.attributes.state.value
        initialState()
        if (state == 1){
            sortTable("asc",2)
            scoresButton.attributes.state.value = 2
            scoresNeutral.classList.toggle("hidden")
            scoresUp.classList.toggle("hidden")
        } else{
            if (state == 2){
                sortTable("desc",2)
                scoresButton.attributes.state.value = 1
                scoresNeutral.classList.toggle("hidden")
                scoresDown.classList.toggle("hidden")
            }
        }
        
    })

    salesButton.addEventListener("click", function(){
        let state = salesButton.attributes.state.value
        initialState()
        if (state == 1){
            sortTable("asc",3)
            salesButton.attributes.state.value = 2
            salesNeutral.classList.toggle("hidden")
            salesUp.classList.toggle("hidden")
        } else{
            if (state == 2){
                sortTable("desc",3)
                salesButton.attributes.state.value = 1
                salesNeutral.classList.toggle("hidden")
                salesDown.classList.toggle("hidden")
            }
        }
        
    })


    

</script>